name: CI

on:
  push:
    branches: [ main, develop, ci-coverage-fixes ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check code formatting
      run: cargo fmt --check
      
    - name: Run Clippy linting
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --verbose

  build:
    name: Build Linux (native)
    runs-on: ubuntu-latest
    needs: quality-gates
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Build
      run: cargo build --release --locked
      
    - name: Prepare binary for upload
      run: |
        mkdir -p artifacts
        cp target/release/disk-speed-test artifacts/disk-speed-test-linux-x86_64
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-x86_64
        path: artifacts/
        retention-days: 7

  build-windows:
    name: Build Windows (native MSVC)
    runs-on: windows-latest
    needs: quality-gates
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Build
      run: cargo build --release --locked

    - name: Prepare binary for upload
      run: |
        New-Item -ItemType Directory -Force -Path artifacts | Out-Null
        Copy-Item target/release/disk-speed-test.exe artifacts/disk-speed-test-windows-x86_64.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-x86_64
        path: artifacts/
        retention-days: 7

  build-macos:
    name: Build macOS (native Intel)
    runs-on: macos-13
    needs: quality-gates
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Build
      run: cargo build --release --locked

    - name: Prepare binary for upload
      run: |
        mkdir -p artifacts
        cp target/release/disk-speed-test artifacts/disk-speed-test-macos-x86_64

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-x86_64
        path: artifacts/
        retention-days: 7

  build-macos-arm64:
    name: Build macOS (native ARM64)
    runs-on: macos-14
    needs: quality-gates
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Build
      run: cargo build --release --locked

    - name: Prepare binary for upload
      run: |
        mkdir -p artifacts
        cp target/release/disk-speed-test artifacts/disk-speed-test-macos-arm64

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-arm64
        path: artifacts/
        retention-days: 7