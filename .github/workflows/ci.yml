name: CI

on:
  push:
    branches: [ main, develop, ci-coverage-fixes ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check code formatting
      run: cargo fmt --check
      
    - name: Run Clippy linting
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --verbose

  build:
    name: Build Cross-Platform Binaries
    runs-on: ubuntu-latest
    needs: quality-gates
    
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cross-compilation tool
      run: cargo install cross --git https://github.com/cross-rs/cross
      
    - name: Build for target
      run: cross build --release --target ${{ matrix.target }}
      
    - name: Prepare binary for upload
      run: |
        mkdir -p artifacts
        if [[ "${{ matrix.target }}" == *"windows"* ]]; then
          cp target/${{ matrix.target }}/release/disk-speed-test.exe artifacts/disk-speed-test-${{ matrix.target }}.exe
        else
          cp target/${{ matrix.target }}/release/disk-speed-test artifacts/disk-speed-test-${{ matrix.target }}
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.target }}
        path: artifacts/
        retention-days: 7