name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euxo pipefail
          cargo build --release
          ARCH=$(uname -m)
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          OUT="disk-speed-test-${GITHUB_REF_NAME}-${OS}-${ARCH}.tar.gz"
          tar -czf "$OUT" -C target/release disk-speed-test
          echo "ARTIFACT_NAME=$OUT" >> "$GITHUB_ENV"

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          cargo build --release
          $arch = $env:PROCESSOR_ARCHITECTURE
          $out = "disk-speed-test-$($env:GITHUB_REF_NAME)-windows-$arch.zip"
          Compress-Archive -Path target/release/disk-speed-test.exe -DestinationPath $out
          echo "ARTIFACT_NAME=$out" >> $env:GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
          tag_name: ${{ github.ref_name }}